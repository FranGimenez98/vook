// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int       @id @default(autoincrement())
  registeredAt DateTime  @default(now())
  username     String    @unique
  email        String    @db.VarChar(250)
  password     String    @db.VarChar(250)
  firstName    String?
  lastName     String?
  image        String?
  banner       String?
  description  String?
  Vook         Vook[]
  Post         Post[]
  followedBy   User[]    @relation("UserFollows")
  following    User[]    @relation("UserFollows")
  Comment      Comment[]
  Like         Like[]
}

model Vook {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Post        Post[] 
  User        User     @relation(fields: [userUserId], references: [userId])
  userUserId  Int
}

model Post {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  User        User?     @relation(fields: [userUserId], references: [userId])
  userUserId  Int?
  Vook        Vook?     @relation(fields: [vookId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vookId      Int?
  title       String
  description String
  image       String
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id         Int       @id @default(autoincrement())
  message    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
  user       User      @relation(fields: [userUserId], references: [userId])
  userUserId Int
  post       Post      @relation(fields: [postId], references: [id])
  postId     Int
  parent     Comment?  @relation("ParentChild", fields: [parentId], references: [id])
  children   Comment[] @relation("ParentChild")
  parentId   Int?
}

model Like {
  id         Int  @id @default(autoincrement())
  user       User @relation(fields: [userUserId], references: [userId])
  userUserId Int
  post       Post @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId     Int
}
